function DNA (DNA_OBJ)
{
	playButton = '<div class="row"><div class="col-md-1"></div><div class="col-md-10"><input type="hidden" id="soundData-'+ DNA_OBJ.id + '" name="soundData-'+ DNA_OBJ.id + '" value="'+ DNA_OBJ.soundData +'"><div class="btn-group btn-group-justified"><a href="#" name="soundData-' + DNA_OBJ.id + '" class="btn btn-default btn-xs btn-default dna-play">Play</a><a href="'+ download(DNA_OBJ.soundData) +'" name="soundData-' + DNA_OBJ.id + '" class="btn btn-default btn-xs btn-default dna-download" download="sound.wav">Download</a></div><input style="margin-left: 60px;"type="checkbox" class="DNA-checkbox" id="checkbox-'+ DNA_OBJ.id + '" name="checkbox-'+ DNA_OBJ.id + '" value="1"></div><div class="col-md-1"></div></div>';
	
	DNADiv = $('<div/>', {
        'class':'col-md-2 DNA',
        'html': '<form>' + chromosome(DNA_OBJ.chromosomes,DNA_OBJ.id) + playButton + '</form>'
    });
  	
    return DNADiv;
}


function chromosome (objects,DNA_ID)
{
	var html = '';
	var chromosomeDiv = '';
	$.each( objects, function( i, object ) {
		chromosomeDiv = chromosomeDiv + '<div class="col-md-5 chromosome" style="background-color:' + object.color + '"></div>';
		if(i % 2 !== 0)
		{
			chromosomeDivs = '<div class="row"><div class="col-md-1"></div>' + chromosomeDiv + '<div class="col-md-1"></div></div>';
		    chromosomeDiv = '';
		    html = html + chromosomeDivs;
		    
		}
	});

	return html;

}

function AddDNA(DNAobject)
{
	
	$('.DNA-row').prepend(DNA(DNAobject));

	$('.hidden-storage').append("<input type='hidden' id='DNAHidden-"+ DNAobject.id +"' value='" + JSON.stringify(DNAobject) + "'>");

}

function retrieveFromHiddenStorage(DNAIdArray)
{	
	DNAObjectArray = [];
	$.each(DNAIdArray, function(index, value)
	{		
		DNAObjectArray.push(JSON.parse( $('#DNAHidden-' + value).val()));
	});
	console.log(DNAObjectArray.length);
	return DNAObjectArray;
}


$( document ).ready(function() {
    
    for (var i = 0; i < 6; i++) {
    	AddDNA(generateDNA(i, 10));
    }
   

    $( '.DNA-row').on( "click", '.dna-play', function() {
    	play($('#'+$(this).attr('name')).val().split(','));
    });

    $( '.generate').on( "click",function() {
    	/*
    	var dnaSerArray = $( ".DNA-current" ).serializeArray();
    	var chromosomes = [];

    	$.each(dnaSerArray, function( index, value ) {
		  var inputName = value.name;
		  var color = $('#'+ inputName).parent('.chromosome').css('background-color');
		  var id = inputName.split('-')[2];
		  var DNAID = inputName.split('-')[1];
		  if(inputName.match("^radio-"))
		  {
		  	chromosomes.push({option: value.value, soundData: dnaSerArray[index+1].value, color: color, id : id, DNAID: DNAID});
		  }
		});
		$( ".DNA-current" ).removeClass('DNA-current');


		// TODO: Do something with the chromosomes (Array) that have a option
		// then re add the made DNA that is returned
		AddDNA(handleChromosomeArray(chromosomes));
		*/
	
		DNAArrayToSave = [];
		$.each($('.DNA-checkbox'), function( index, value ) {
		  if($(this).prop('checked'))
		  {
		  	var id = value.name.split('-')[1];
		  	DNAArrayToSave.push(id);
		  }
		});
		var newDNAPopulation = combineDNA(retrieveFromHiddenStorage(DNAArrayToSave), 6, 10, 0.5);

		$.each(newDNAPopulation, function(index, value) {
			AddDNA(value);
		});
    	
    });

});

